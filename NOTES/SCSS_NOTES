<%# Forma mais fácil de se escrever CSS %>

############### SCSS ###############

<%# Descomentar essa linha no `gemfile` e rodar `bundle install` %>
gem "sassc-rails"

###### Graphic Variables ######

<%# Definir variável utilizando $ %>

$gray: #F4F4F4;
$spacer: 8px;

body {
  background: $gray; // Using this variable
}

p {
  padding: $spacer ($spacer * 3);
}

###### NESTING ######

<%# Não realizar nesting com mais de um level $ %>

.banner {
  background: red;

  h1 {
    font-size: 50px;
  }
}

###### CHAINING ######

<%# Não realizar nesting com mais de um level $ %>

a {
  color: grey;

  &:hover {
    color: black;
  }
}


###### Asset Pipeline ######

 <%# É um framework em rails que precompile, concatenate and compress todo CSS e images do projeto %>
 <%# É implementado pela gem `Sprockets` e gerencia a pasta app/assets %>


<%# Tag para carregar o CSS em `app/views/layouts/application.html.erb` %>
<%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>

<%# `Precompile` de SCSS em CSS %>
<%# `Concatenation` linkar as partials com application.scss %>
<%# `Fingerprint`, assets caching. Acessada a aplicação, o css fica guardado localmente através de cache.%>
  <%# quando ocorrer alguma atualização na plataforma o browser identifica quais componentes precisam ser baixados %>
  <%# através do Fingerprint, `href em link` %>
<%# `Minification` retira todos os espaços e caracteres que fazem o html human readable, não são necessários para a máquina %>
<%# `Compression` reduzir os tamanhos dos assets. Setado como default e produção%>


###### Asset Pipeline in Production ######

<%# Todos os assets precompilados, concatenados, etc são gerados em `public/assets` no momento do deploy %>
rails assets:precompile

<%# Utilizado o comando a cima em desenvolvimento é preciso limpar a pasta public/assets, caso contrário todo o css em ap/assets %>
<%# será sobrescrevido pelo public/assets %>
rails assets:clobber

https://guides.rubyonrails.org/asset_pipeline.html



###### Simple Form ######
<!-- adicionar gem na gemfile: bundle install -->
gem "simple_form", github: "heartcombo/simple_form"
<!-- E gerar instalação com bootstrap -->
rails generate simple_form:install --bootstrap

###### Autoprefixer ######
<!-- Adapatar css para outros browsers -->

###### Javascript in Rails 7 ######

<!-- Nova forma de utilização é através do `import maps` -->
<!-- Run javascript `yarn build --watch` -->

###### Stimulus ######

<!-- Gerar novo controller -->
rails generate stimulus `name_controller`

<!-- Dar um controller para uma tag -->

data-controller=`name_controller`



###### Javascript/Bootstrap - Outras Pacotes ######

<!-- Javascript do bootstrap -->
yarn add bootstrap

<!-- Adicionar em // config/initializers/assets.rb -->

Rails.application.config.assets.paths << Rails.root.join("node_modules")

yarn add @popperjs/core

<!-- Adicionar em  // app/javascript/application.js -->
import "bootstrap"

<!-- Adicionar Type-JS. Necessário <span> tag -->
rails g stimulus `name_controller`
  <!-- Importar no controller gerado -->
  import Typed from "typed.js"
